{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\Desktop\\\\Portfolio\\\\MyPortfolio\\\\portfolio-app\\\\src\\\\App.js\";\n/*REACT-ROUTER*/\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n/*IMPORT SCRIPTS*/\n\nimport ScrollToTop from \"./utils/scrollToTop\";\n\n/*STYLES IMPORTS*/\n\nimport \"./styles/normalize.css\";\nimport \"./styles/style.css\";\nimport \"./styles/space.css\";\n\n/*IMPORTS COMPONENTS*/\n\nimport Home from \"./pages/Home/Home\";\nimport About from \"./pages/About/About\";\nimport Work from \"./pages/Work/Work\";\nimport Contact from \"./pages/Contact/Contact\";\nimport Header from \"./components/Header/Header\";\nimport Icon from \"./components/Icon/Icon\";\n\n// сколько звёзд может быть одновременно на экране\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar starsCount = 800;\n// на старте массив со звёздами будет пустой\nvar stars = [];\n// класс, на основе которого будут сделаны все звёзды\nclass Star {\n  // конструктор, который вызывается при создании каждого объекта на основе этого класса\n  constructor() {\n    // у новой звезды будут случайные координаты\n    this.x = random(-width, width);\n    this.y = random(-height, height);\n    // глубина — насколько виртуально близко к экрану появится звезда\n    this.z = random(width);\n  }\n  // метод, который обновляет координаты звезды\n  update() {\n    // скорость полёта\n    var speed = 8;\n    // приближаем звезду к краю экрана, уменьшая глубину на значение скорости\n    this.z -= speed;\n    // если звезда вылетела за край экрана — делаем из неё новую звезду, для этого меняем координаты\n    if (this.z < 1) {\n      this.x = random(-width, width);\n      this.y = random(-height, height);\n      // для новой звезды вместо старой глубину появления теперь выбираем не случайным образом, а задаём прямо\n      this.z = width;\n    }\n  }\n\n  // метод, который отрисовывает звезду на экране\n  drawStar() {\n    // каждая звезда — белого цвета\n    fill(236);\n    // и без контура\n    noStroke();\n\n    // с помощью функции map() из библиотеки p5.js получаем новые координаты для отрисовки звезды \n    var sx = map(this.x / this.z, 0, 1, 0, width);\n    var sy = map(this.y / this.z, 0, 1, 0, height);\n\n    // чем ближе к краю экрана (чем меньше глубина z) — тем больше радиус \n    var r = map(this.z, 0, width, 10, 0);\n    // рисуем звезду в новых координатах и новым размером\n    ellipse(sx, sy, r, r);\n  }\n}\n\n// подготавливаем всё к запуску — то, что написано здесь выполнится автоматически сразу после загрузки\nfunction setup() {\n  // создаём холст, на котором будем рисовать\n  createCanvas(innerWidth, innerHeight);\n  // размещаем сразу все звёзды на холсте\n  for (var i = 0; i < starsCount; i++) {\n    // каждая новая звезда — объект класса Star и умеет то же самое, что и все остальные звёзды\n    stars[i] = new Star();\n  }\n}\n\n// пока мы не закроем страницу, постоянно будет выполняться функция drw() \nfunction draw() {\n  // ставим чёрный фон и указываем скорость обновления фона — чем меньше второе число, тем больший шлейф будут оставлять звёзды\n  background(16, 220);\n  // формируем центр экрана, куда «полетим» сквозь звёзды\n  translate(width / 2, height / 2);\n\n  // отрисовываем каждый раз все звёзды и меняем их положение\n  for (var i = 0; i < starsCount; i++) {\n    stars[i].drawStar();\n    stars[i].update();\n  }\n}\n\n// если поменяется размер окна браузера — сразу меняем размер холста\naddEventListener('resize', () => {\n  resizeCanvas(innerWidth, innerHeight);\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/work\",\n            element: /*#__PURE__*/_jsxDEV(Work, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/contact\",\n            element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","ScrollToTop","Home","About","Work","Contact","Header","Icon","jsxDEV","_jsxDEV","starsCount","stars","Star","constructor","x","random","width","y","height","z","update","speed","drawStar","fill","noStroke","sx","map","sy","r","ellipse","setup","createCanvas","innerWidth","innerHeight","i","draw","background","translate","addEventListener","resizeCanvas","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Пользователь/Desktop/Portfolio/MyPortfolio/portfolio-app/src/App.js"],"sourcesContent":["/*REACT-ROUTER*/\n\nimport { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n/*IMPORT SCRIPTS*/\n\nimport ScrollToTop from \"./utils/scrollToTop\";\n\n/*STYLES IMPORTS*/\n\nimport \"./styles/normalize.css\";\nimport \"./styles/style.css\";\nimport \"./styles/space.css\";\n\n/*IMPORTS COMPONENTS*/\n\nimport Home from \"./pages/Home/Home\";\nimport About from \"./pages/About/About\";\nimport Work from \"./pages/Work/Work\";\nimport Contact from \"./pages/Contact/Contact\";\nimport Header from \"./components/Header/Header\";\nimport Icon from \"./components/Icon/Icon\";\n\n// сколько звёзд может быть одновременно на экране\nvar starsCount = 800;\n// на старте массив со звёздами будет пустой\nvar stars = [];\n// класс, на основе которого будут сделаны все звёзды\nclass Star{\n\t// конструктор, который вызывается при создании каждого объекта на основе этого класса\n\tconstructor(){\n\t\t// у новой звезды будут случайные координаты\n\t\tthis.x = random(-width, width);\n\t\tthis.y = random(-height, height);\n\t\t// глубина — насколько виртуально близко к экрану появится звезда\n\t\tthis.z = random(width);\n\t}\n\t// метод, который обновляет координаты звезды\n\tupdate(){\n\t\t// скорость полёта\n\t\tvar speed = 8;\n\t\t// приближаем звезду к краю экрана, уменьшая глубину на значение скорости\n\t\tthis.z -= speed;\n\t\t// если звезда вылетела за край экрана — делаем из неё новую звезду, для этого меняем координаты\n\t\tif(this.z < 1){\n\t\t\tthis.x = random(-width, width);\n\t\t\tthis.y = random(-height, height);\n\t\t\t// для новой звезды вместо старой глубину появления теперь выбираем не случайным образом, а задаём прямо\n\t\t\tthis.z = width;\n\t\t}\n\t}\n\n\t// метод, который отрисовывает звезду на экране\n\tdrawStar(){\n\t\t// каждая звезда — белого цвета\n\t\tfill(236);\n\t\t// и без контура\n\t\tnoStroke();\n\n\t\t// с помощью функции map() из библиотеки p5.js получаем новые координаты для отрисовки звезды \n\t\tvar sx = map(this.x / this.z, 0, 1, 0, width);\n\t\tvar sy = map(this.y / this.z, 0, 1, 0, height);\n\n\t\t// чем ближе к краю экрана (чем меньше глубина z) — тем больше радиус \n\t\tvar r = map(this.z, 0, width, 10, 0);\n\t\t// рисуем звезду в новых координатах и новым размером\n\t\tellipse(sx, sy, r, r);\n\t}\n}\n\n// подготавливаем всё к запуску — то, что написано здесь выполнится автоматически сразу после загрузки\nfunction setup(){\n\t// создаём холст, на котором будем рисовать\n\tcreateCanvas(innerWidth, innerHeight);\n\t// размещаем сразу все звёзды на холсте\n\tfor (var i = 0; i < starsCount; i++) {\n\t\t// каждая новая звезда — объект класса Star и умеет то же самое, что и все остальные звёзды\n\t\tstars[i] = new Star();\n\t}\n}\n\n// пока мы не закроем страницу, постоянно будет выполняться функция drw() \nfunction draw(){\n// ставим чёрный фон и указываем скорость обновления фона — чем меньше второе число, тем больший шлейф будут оставлять звёзды\nbackground(16, 220);\n// формируем центр экрана, куда «полетим» сквозь звёзды\ntranslate(width/2, height/2);\n\n// отрисовываем каждый раз все звёзды и меняем их положение\nfor (var i = 0; i < starsCount; i++) {\n\tstars[i].drawStar();\n\tstars[i].update();\n}\n}\n\n// если поменяется размер окна браузера — сразу меняем размер холста\naddEventListener('resize', () => {\n\tresizeCanvas(innerWidth, innerHeight);\n})\t\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<main className=\"container\">\n\t\t\t\t<Router>\n\t\t\t\t<ScrollToTop />\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Icon />\n\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t<Route path=\"/\" element={<Home />} />\n\t\t\t\t\t\t\t<Route path=\"/about\" element={<About />} />\n\t\t\t\t\t\t\t<Route path=\"/work\" element={<Work />} />\n\t\t\t\t\t\t\t<Route path=\"/contact\" element={<Contact />} />\n\t\t\t\t\t\t</Routes>\n\t\t\t\t</Router>\n    \t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}